<template>
 <div class="class">
   <div class="container">
      
      <div class="row">
        <div class="col-sm-8 col-table">
            <ul class="alert alert-danger" v-if="errors && errors.length">
                    <li v-for="error of errors" :key="error.id">
                    {{error.message}}
                </li>
            </ul>
          <div>
          <template>
          <div>
            <h2>Nazwa Testu: </h2>
            <b-form-textarea minlength="2" id="textarea1"
                            v-model="quiz.que"
                            placeholder="Enter something"
                            :rows="1"
                            :max-rows="1">
            </b-form-textarea>
          </div>
          </template>
          <template>
          <div  class="mt-3">
            <h2>Typ Testu: </h2>
            <b-form-select v-model="quiz.type" :options="options" />
          </div>
          </template>
           <div >
               <b-card v-for="(q, index) in quiz" v-bind:key="index" class="mt-5 mb-5">
        
           
                <h2 class="card-title">Pytanie {{index+1}} </h2>
                <i></i>
                <input placeholder="Wprowadź pytanie"  class="form-control"  v-model="q.name" />
                <button  class="btn btn-primary btn-xs mt-3" @click="add(index)">Dodaj Pytanie</button>
                <button class="btn btn-danger btn-xs ml-3 mt-3" @click="remove(index)">Usuń Pytanie</button>
                <!-- <AddQuestions v-bind:props1="quiz"></AddQuestions> -->

            <div class="ml-5" >
                <div class="d-flex flex-row">
                    <div >
                        <h4 class="mt-4 mr-4">Dodaj odpowiedź:</h4>
                    </div>
                    <div >
                        <button class="btn btn-primary btn-xs mt-3" @click="addRow(index)">+</button>
                        <button class="btn btn-danger btn-xs ml-3 mt-3" @click="removeRow(index)">-</button>
                    </div>
                </div>
            </div>
              <form v-for="(qq, index) in quiz1" v-bind:key="index" >
                <tr >
                <td>
                {{ index + 1 }}.
                </td>
                <td> 
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                    <div class="input-group-text">
                        <input type="checkbox" aria-label="Checkbox for following text input">
                    </div>
                    </div>
                    <input class="form-control" v-model="qq.name" aria-label="Text input with checkbox">
                </div>
                </td>
                </tr>       
            </form>
             </b-card> 
       
           

          
           </div> 
             <button  v-on:click="createQuiz(quiz)" class="btn btn-success mb-5">Dodaj Test</button>
          </div>
        </div>
        <div class="col-md-3 wrap">
            <ActionLinks v-bind:actions="actions" ></ActionLinks>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import axios from 'axios'
import router from '../../router'
import WelcomeMessage from '../welcome/WelcomeMessage.vue'
import ActionLinks from '../links/ActionLinks.vue'
import Logout from '../../components/Logout.vue'
import AddQuestions from '../../components/AddQuestions.vue'


export default {
    
    components: {
      WelcomeMessage,
      ActionLinks,
      Logout,
      AddQuestions,
    },
     data () {
    return {
      actions: [
            {label: 'Moje Klasy', link: 'listClassesInstructor'},
            {label: 'Moje Testy', link: 'listQuizzesInstructor'},
            {label: 'Stwórz Klase', link: 'createClass'},
            {label: 'Stwórz Test', link: 'createQuiz'},
          ],
      list:'',
      errors:[],
      quiz: [{
        name:'',
        type:'',
        question: {
          ques: '',
          answers: [],
          validAnswers: []
        },
      }],
        quiz1: [],

      selected: null,
      options: [
          { value: null, text: 'Please select type' },
          { value: 'open', text: 'open' },
          { value: 'closed', text: 'closed' },
          { value: 'true/false', text: 'true/false' },
          { value: 'multiple', text: 'multiple' }
        ]
    
    }
    },
    methods: {

    async createQuiz(quiz){
      try{
         await axios.post("${process.env.VUE_APP_HOST}/quiz/" ,  {
              name: quiz.name,
              type: quiz.type,
              question: [{
                ques: quiz.question.ques,
                answers: quiz.question.answers 
              }]
            });
            console.log(quiz.type),
        router.push({path: '/listQuizzesInstructor'});
      }catch(e) {
          
          this.errors.push(e);
      }
    },
     add: function (index) {

        try {
            
            this.quiz.splice(index + 1, 0, {});
        } catch(e)
        {
            console.log(e);
        }
        },
    remove: function (index) {
        this.quiz.splice(index, 1);
    },

     addRow: function (index) {
        try {
            this.quiz1.push({});
        } catch(e)
        {
            console.log(e);
        }
    },
    removeRow: function (index) {
        this.quiz1.splice(index, 1);
    },
    }
}

</script>

<style>
.col-table {
  padding-top: 50px;
}

select.form-control {
    border-radius: 0;
    border-color: #fff;
    border-bottom: 1px solid rgb(182, 182, 182);
}
select.form-control:focus {
    box-shadow: none;
    border-color: #fff;
}
select.form-control:hover {
    border-radius: 0;
    border-color: #fff;
    border-bottom: 2px solid #003c82;
    box-shadow: none;
}
</style>
